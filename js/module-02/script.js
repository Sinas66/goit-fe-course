// 1) –î–∞–Ω—ã –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞: ['a', 'b', 'c'] –∏ [1, 2, 3]. –û–±—ä–µ–¥–∏–Ω–∏—Ç–µ –∏—Ö –≤–º–µ—Å—Ç–µ.

// const a = ['a', 'b', 'c'];
// const b = [1, 2, 3];
// const c = a.concat(b)
// console.log(c);

// 2) –î–∞–Ω –º–∞—Å—Å–∏–≤ ['a', 'b', 'c']. –î–æ–±–∞–≤—å—Ç–µ –µ–º—É –≤ –∫–æ–Ω–µ—Ü —ç–ª–µ–º–µ–Ω—Ç—ã 1, 2, 3.

//  const a = ['a', 'b', 'c'];
// a.push(1, 2, 3)
// console.log(a);

// 3) –î–∞–Ω—ã –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞: [1, 2, 3] –∏ [4, 5, 6]. –û–±—ä–µ–¥–∏–Ω–∏—Ç–µ –∏—Ö –≤–º–µ—Å—Ç–µ.

// const a = ['1', '2', '3'];
// const b = a.slice();
// b.push(4, 5, 6);
// // b.push(4, 5, 6);
// console.log(b);

// 4) –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3]. –°–¥–µ–ª–∞–π—Ç–µ –∏–∑ –Ω–µ–≥–æ –º–∞—Å—Å–∏–≤ [3, 2, 1].

// const b = [1, 2, 3];
// a = b.slice().reverse();
// b.push(4)
// console.log(a);
// console.log(b);

// 5) –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3]. –î–æ–±–∞–≤—å—Ç–µ –µ–º—É –≤ –∫–æ–Ω–µ—Ü —ç–ª–µ–º–µ–Ω—Ç—ã 4, 5, 6.

// const b = [1, 2, 3];
// b.push(4, 5, 6)
// console.log(b);

// 6) –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3]. –î–æ–±–∞–≤—å—Ç–µ –µ–º—É –≤ –Ω–∞—á–∞–ª–æ —ç–ª–µ–º–µ–Ω—Ç—ã 4, 5, 6.

// const b = [1, 2, 3];
// b.unshift(4, 5, 6)
// console.log(b);

// 7)  –î–∞–Ω –º–∞—Å—Å–∏–≤ ['js', 'css', 'jq']. –í—ã–≤–µ–¥–∏—Ç–µ –Ω–∞ —ç–∫—Ä–∞–Ω –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç.

// const a = [`js`, `css`, `jq`];
// console.log(a[0]);

// :sunglasses: –î–∞–Ω –º–∞—Å—Å–∏–≤ ['js', 'css', 'jq']. –í—ã–≤–µ–¥–∏—Ç–µ –Ω–∞ —ç–∫—Ä–∞–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç.

// const a = [`js`, `css`, `jq`];
// console.log(a[a.length -1]);

// 9) –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3, 4, 5]. –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ slice –∑–∞–ø–∏—à–∏—Ç–µ –≤ –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã [1, 2, 3].

// const a = [1, 2, 3, 4, 5, 6];
// const b = a.slice(0,3);
// console.log(b);

// 10) –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3, 4, 5]. –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ slice –∑–∞–ø–∏—à–∏—Ç–µ –≤ –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã [4, 5]. –°–∫—Ä—ã—Ç—å —Ä–µ—à–µ–Ω–∏–µ.

// const a = [1, 2, 3, 4, 5, 6];
// const b = a.slice(3, a.length -1);
// console.log(b);

// 11) –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3, 4, 5]. –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ splice –ø—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –º–∞—Å—Å–∏–≤ –≤ [1, 4, 5].

// const a = [1, 2, 3, 4, 5, 6];
// const b = a.splice(1, 2);
// console.log(a);

// 12)  –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3, 4, 5]. –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ splice –∑–∞–ø–∏—à–∏—Ç–µ –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç—ã [2, 3, 4]. –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ.

// const a = [1, 2, 3, 4, 5, 6];
// const b = a.splice(1, 3);
// console.log(b);

// 13) –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3, 4, 5]. –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ splice —Å–¥–µ–ª–∞–π—Ç–µ –∏–∑ –Ω–µ–≥–æ –º–∞—Å—Å–∏–≤ [1, 2, 3, 'a', 'b', 'c', 4, 5]. –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ.

// const a = [1, 2, 3, 4, 5, 6];
// a.splice(2, 0, `a`, `b`, `c`);
// console.log(a);

// 14) –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3, 4, 5]. –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ splice —Å–¥–µ–ª–∞–π—Ç–µ –∏–∑ –Ω–µ–≥–æ –º–∞—Å—Å–∏–≤ [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e']. –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ. (edited)

// const a = [1, 2, 3, 4, 5, 6];
// a.splice(1, 0, `a`, `b`);
// let b = a.indexOf(4)+1;
// a.splice(b, 0, `c`);
// let c = a.indexOf(5)+1;
// a.splice(c, 0, `e`);
// console.log(a);

// // 1) –í–∏–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤–µ —á–∏—Å–ª–æ (–≤—ñ–¥ 0 –¥–æ –¥–æ–≤–∂–∏–Ω–∏ –º–∞—Å–∏–≤–∞);
// // 2) –ó–∞–ø–∏—Å–∞—Ç–∏ –≤ –∑–º—ñ–Ω–Ω—É –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è —Ç–∏–ø—É –º–∞—Å–∏–≤[—ñ–Ω–¥–µ–∫—Å];
// // 3) –í–∏–≤–µ—Å—Ç–∏ –∑–º—ñ–Ω–Ω—É –∑ –ø—É–Ω—Ç–∫—É 2 –≤ –∞–ª–µ—Ä—Ç;

// const b = [1,2,3,4,5,6,7]
// let a = Math.floor(Math.random()*b.length)
// console.log(a);

// let index = Math.floor(Math.random()*animals.length);
// alert(animals[index]);
// 1) –ß–µ—Ä–µ–∑ prompt –≤–≤–æ–¥–∏–º–æ —Å–≤—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç —Ç–≤–∞—Ä–∏–Ω–∫–∏
// 2) –í–∞—Ä—ñ–∞–Ω—Ç –∫–æ–º–ø—é—Ç–µ—Ä–∞ –∑–∞–ø–∏—Å–∞—Ç–∏ –≤ –∑–º—ñ–Ω–Ω—É
// 3) –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –Ω–∞—à –≤–∞—Ä—ñ–∞–Ω—Ç –∑ –∫–æ–ø—é—Ç–µ—Ä–Ω–∏–º
// 3,1) –Ø–∫—â–æ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ —Å–ø—ñ–≤–ø–∞–ª–∏ —Ç–æ–¥—ñ –≤–∏–≤–æ–¥–∏–º–æ –∞–ª–µ—Ä—Ç–æ–º —â–æ —é–∑–µ—Ä –≤–∏–≥—Ä–∞–≤–∞.
// 3,2) –Ø–∫—â–æ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –Ω–µ —Å–ø—ñ–≤–ø–∞–ª–∏ –∫–∞–∂–µ–º–æ —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ–≥—Ä–∞–≤ —ñ –≤–∏–≤–æ–¥–∏–º–æ –≤–∞—Ä—ñ–∞–Ω—Ç –∫–æ–º–ø—é—Ç–µ—Ä–∞.

// const a = [`–ª–µ–≤`, `—Ç–∏–≥—Ä`, `–∫–æ—Ä–æ–≤–∞`];
// let index = Math.floor(Math.random()*a.length);
// console.log(a);
// console.log(index);
// let b = prompt(`–ñ–∏–≤–æ—Ç–Ω–æ–µ?`, `–ª–µ–≤, —Ç–∏–≥—Ä –∏–ª–∏ –∫–æ—Ä–æ–≤–∞`);
// if (b != null) {
//     b = b.toLocaleLowerCase();
// }
// let c = a.indexOf(b);
// if (index === c) {
//     alert(`–°–û–í–ü–ê–õ–û`)
// } else {
//     alert(`–ù–µ–ø–æ–≤–µ–∑–ª–æ ;( –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –±—ã–ª ${a[index]} `)
// }

// –ù–∞–ø–∏—Å–∞—Ç–∏ –≥—Ä—É –ö–∞–º—ñ–Ω—å –ù–æ–∂–∏—Ü—ñ –ü–∞–ø—ñ—Ä.
// –í–∞—Ä—ñ–∞–Ω—Ç–∏ –≤–∏–±–æ—Ä—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –≤ –º–∞—Å–∏–≤—ñ
// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å —Å–≤—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç
// –ö–æ–º–ø—é—Ç–µ—Ä –≤–∏–±–∏—Ä–∞—î —Å–≤—ñ–π —Ä–∞–Ω–¥–æ–º–Ω–∏–π –≤–∞—Ä—ñ–≤–∞–Ω—Ç –∑ –º–∞—Å–∏–≤—É
// –ü–µ—Ä–≤—ñ—Ä—è—î–º–æ –≤–∏–±—ñ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –≤–∏–±—ñ—Ä –∫–æ–º–ø—é—Ç–µ—Ä–∞.
// –û–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –≤—Å—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏:
// 1) –í–∞—Ä—ñ–∞–Ω—Ç–∏ –¥–µ –≤–∏–≥—Ä–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
// 2) –í–∞—Ä—ñ–∞–Ω—Ç–∏ –¥–µ –≤–∏–≥—Ä–∞—î –∫–æ–º–ø—é—Ç–µ—Ä
// 3) –í–∞—Ä—ñ–∞–Ω—Ç–∏ –¥–µ –≤–∏—Ö–æ–¥–∏—Ç—å –Ω—ñ—á–∏—è.

// const mass = [`–∫–∞–º–µ–Ω—å`, `–Ω–æ–∂–Ω–∏—Ü—ã`, `–±—É–º–∞–≥–∞`];
// let compChoice = Math.floor(Math.random() * mass.length);
// let userPromt = prompt(`–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥—É`);
// let draw = `–ù–ò–ß–ò–Ø`;
// let userWin = `–¢—ã –ø–æ–±–µ–¥–∏–ª`;
// let compWin = `–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª`;

// if (userPromt !== null) {
//   userPromt = userPromt.toLocaleLowerCase();
// }
// userChoice = mass.indexOf(userPromt);
// if (
//   (userChoice == 0 && compChoice == 0) ||
//   (userChoice == 1 && compChoice == 1) ||
//   (userChoice == 2 && compChoice == 2)
// ) {
//   alert(`${draw} –í—ã –æ–±–∞ –≤—ã–±—Ä–∞–ª–∏ ${mass[userChoice]}`);
// }
// if (
//   (userChoice == 0 && compChoice == 2) ||
//   (userChoice == 1 && compChoice == 0) ||
//   (userChoice == 2 && compChoice == 1)
// ) {
//   alert(
//     `${compWin} –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–±—Ä–∞–ª ${mass[compChoice]} , –∞ —Ç—ã ${mass[userChoice]}`
//   );
// }

// if (
//   (userChoice == 0 && compChoice == 1) ||
//   (userChoice == 1 && compChoice == 2) ||
//   (userChoice == 2 && compChoice == 0)
// ) {
//   alert(
//     `${userWin} –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–±—Ä–∞–ª ${mass[compChoice]} , –∞ —Ç—ã ${mass[userChoice]}`
//   );
// }

// 1) –ó–∞–ø–∏—Å—É—î–º–æ –≤ –∑–º—ñ–Ω–Ω—É —Å—Ç—Ä–æ–∫—É –∑ –ø—Ä–æ–º—Ç–∞
// 2) –ó—Ä–æ–±–∏—Ç–∏ —Å—Ç—Ä–æ–∫—É –º–∞—Å–∏–≤–æ–º
// 3) –°–∫–æ–ø—ñ—é–≤–∞—Ç–∏ –º–∞—Å–∏–≤
// 4) –†–µ–≤–µ—Ä—Å–∏–º–æ –º–∞—Å–∏–≤
// 5) –ó –º–∞—Å–∏–≤—ñ–≤ —Ä–æ–±–∏–º–æ —Å—Ç—Ä–æ–∫–∏
// 6) –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –¥–≤—ñ —Å—Ç—Ä–æ–∫–∏ —ñ –≤–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å;

// let userPromt = prompt(`–í–≤–µ–¥–∏—Ç–µ –ª–æ—Ä–µ–º`);
// const mass = userPromt.split(' ');
// console.log(mass);
// let massReverse = mass.slice().reverse();
// console.log(massReverse);
// massReverse = massReverse.join(` `)

// console.log(`–ë—ã–ª–æ ${userPromt}`);
// console.log(`c—Ç–∞–ª–æ ${massReverse}`);

// 1) –ó–∞–ø–∏—Ç–∞—Ç–∏ –ª–æ–≥—ñ–Ω
// 2) –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —ñ—Å–Ω—É—î –ª–æ–≥—ñ–Ω –≤ –±–∞–∑—ñ
// 3) –Ø–∫—â–æ –ª–æ–≥—ñ–Ω —ñ—Å–Ω—É—î –≤–∏–≤–µ—Å—Ç–∏ –∞–ª–µ—Ä—Ç ("–¢–∞–∫–∏–π –ª–æ–≥—ñ–Ω –≤–∂–µ —ñ—Å–Ω—É—î")
// 4) –Ø–∫—â–æ –ª–æ–≥—ñ–Ω –Ω–µ —ñ—Å–Ω—É—î –≤–∏–≤–µ—Å—Ç–∏ –∞–ª–µ—Ä—Ç ("–í—ñ—Ç–∞—î–º–æ")

// let logins = ["rew", "qwewwe", "apple", "js", "row", "col"];
// let userPromt = prompt(`–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω`);
// console.log(userPromt);
// if (userPromt == null) {
//   alert(`–í–ê–ú –ù–ê–î–û –ë–´–õ–û –í–í–ï–°–¢–ò –õ–û–ì–ò–ù!!!`);
// } else {
//   userPromt = logins.includes(userPromt);
//   if (userPromt) {
//     alert(`–¢–∞–∫–∏–π –ª–æ–≥—ñ–Ω –≤–∂–µ —ñ—Å–Ω—É—î`);
//   } else {
//     alert(`–í—ñ—Ç–∞—î–º–æ`);
//   }
// }

// HW
/*
  –ù–∞–ø–∏—Å–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Å–∫—Ä–∏–ø—Ç:
  
    - –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ —á–µ—Ä–µ–∑ prompt —á–∏—Å–ª–æ. 
      –ß–∏—Å–ª–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª.
      
    - –û–ø–µ—Ä–∞—Ü–∏—è –≤–≤–æ–¥–∞ —á–∏—Å–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –¥–æ
      —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–∂–º–µ—Ç Cancel –≤ prompt. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª do...while.
      
    - –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª –≤–≤–æ–¥ –Ω–∞–∂–∞–≤ Cancel, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–∑—è—Ç—å 
      –º–∞—Å—Å–∏–≤ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö —á–∏—Å–µ–ª, —Å–ª–æ–∂–∏—Ç—å –æ–±—â—É—é —Å—É–º–º—É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –∏ 
      –∑–∞–ø–∏—Å–∞—Ç—å –µ–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª for –∏–ª–∏ for...of.
      
    - –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é –≤–≤–æ–¥–∞, –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ –Ω–µ –ø—É—Å—Ç–æ–π, –≤—ã–≤–µ—Å—Ç–∏ alert —Å —Ç–µ–∫—Å—Ç–æ–º `–û–±—â–∞—è —Å—É–º–º–∞ —á–∏—Å–µ–ª —Ä–∞–≤–Ω–∞ ${—Å—É–º–º–∞}`
      
  üîî PS: –î–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–≥–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∏–º–µ–Ω–Ω–æ —á–∏—Å–ª–æ, –∞ –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä 
      —Å–∏–º–≤–æ–ª–æ–≤, –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –≤ —Å–ª—É—á–∞–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø–æ–∫–∞–∂–∏—Ç–µ alert —Å —Ç–µ–∫—Å—Ç–æ–º 
      '–ë—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑', –ø—Ä–∏ —ç—Ç–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç prompt –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å 
      –≤ –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –Ω–µ –Ω—É–∂–Ω–æ, –ø–æ—Å–ª–µ —á–µ–≥–æ —Å–Ω–æ–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –≤ prompt.
*/
let userInput = undefined;
const numbers = [];
let total = 0;
do {
  userInput = prompt(`–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ`);

  if (userInput === null) {
    userInput = 0;
    for (i of numbers) {
      total += i;
    }
    if (total !== 0) {
      alert(`–û–±—â–∞—è —Å—É–º–º–∞ ${total}`);
    } else {
      alert(`–í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–µ –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞;(`);
    }
  } else if (isNaN(Number(userInput))) {
    alert(`–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ!`);
  } else if (Number(userInput) === 0) {
    alert(`–ù—É –≤–≤–µ–¥–∏ —Ç—ã —á–∏—Å–ª–æ`);
  } else {
    numbers.push(Number(userInput));
  }
} while (userInput !== 0);

/*
  ‚ö†Ô∏è –ó–ê–î–ê–ù–ò–ï –ü–û–í–´–®–ï–ù–ù–û–ô –°–õ–û–ñ–ù–û–°–¢–ò - –í–´–ü–û–õ–ù–Ø–¢–¨ –ü–û –ñ–ï–õ–ê–ù–ò–Æ
  
  –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–º–∏—Ç–∏—Ä—É—é—â–∏–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
  
  –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ –ø–∞—Ä–æ–ª–µ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π passwords. 
  
  –ü—Ä–∏ –ø–æ—Å–µ—â–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å,
  –ø–æ—Å–ª–µ —á–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –º–∞—Å—Å–∏–≤ passwords –ø–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
  
  –ü–∞—Ä–æ–ª—å –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–µ –≤–µ—Ä–Ω–æ –≤—Å–µ–≥–æ n —Ä–∞–∑, –∫–æ–ª-–≤–æ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π attempts.
  –ü–æ–¥—Å–∫–∞–∑–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª do...while.
  –ï—Å–ª–∏ –±—ã–ª –≤–≤–µ–¥–µ–Ω –ø–∞—Ä–æ–ª—å –∫–æ—Ç–æ—Ä—ã–π –µ—Å—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ passwords, –≤—ã–≤–µ—Å—Ç–∏ alert 
  —Å —Ç–µ–∫—Å—Ç–æ–º '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!' –∏ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å –≤ —Ü–∏–∫–ª–µ.
  –ï—Å–ª–∏ –±—ã–ª –≤–≤–µ–¥–µ–Ω –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–æ–ª—å, –æ—Ç–Ω—è—Ç—å –æ—Ç –ª–∏–º–∏—Ç–∞ –ø–æ–ø—ã—Ç–æ–∫ –µ–¥–∏–Ω–∏—Ü—É, 
  –≤—ã–≤–µ—Å—Ç–∏ alert —Å —Ç–µ–∫—Å—Ç–æ–º "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å, —É –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å n –ø–æ–ø—ã—Ç–æ–∫", 
  –≥–¥–µ n —ç—Ç–æ –æ—Å—Ç–∞–≤—à–∏–π—Å—è –ª–∏–º–∏—Ç. 
  
  –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫—Ä—ã–ª alert, –∑–∞–ø—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å —Å–Ω–æ–≤–∞. 
  –ü—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤–µ–¥–µ—Ç 
  —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∞—Ä–æ–ª—å, –Ω–µ –∫–æ–Ω—á–∞—Ç—Å—è –ø–æ–ø—ã—Ç–∫–∏ –∏–ª–∏ –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 
  –Ω–µ –Ω–∞–∂–º–µ—Ç Cancel –≤ prompt.
  –ï—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏, –≤—ã–≤–µ—Å—Ç–∏ alert —Å —Ç–µ–∫—Å—Ç–æ–º "–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏, –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!"
  
  –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º–µ—Ç Cancel, –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ü–∏–∫–ª–∞.
*/

const passwords = ["qwerty", "111qwe", "123123", "r4nd0mp4zzw0rd"];
let attempts = 3;
